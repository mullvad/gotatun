name: Build and test

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    strategy:
      matrix:
        include:
          # Native builds
          - os: ubuntu-latest
            target: ""
            features: ""
          - os: ubuntu-latest
            target: ""
            features: "--no-default-features"
          - os: ubuntu-latest
            target: ""
            features: "--all-features"
          - os: windows-latest
            target: ""
            features: ""
          - os: windows-latest
            target: ""
            features: "--no-default-features"
          - os: windows-latest
            target: ""
            features: "--all-features"
          - os: macos-latest
            target: ""
            features: ""
          - os: macos-latest
            target: ""
            features: "--no-default-features"
          - os: macos-latest
            target: ""
            features: "--all-features"
          # Android cross-compilation
          - os: ubuntu-latest
            target: "x86_64-linux-android"
            features: ""
          - os: ubuntu-latest
            target: "x86_64-linux-android"
            features: "--no-default-features"
          - os: ubuntu-latest
            target: "x86_64-linux-android"
            features: "--all-features"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
        
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Check with features ${{ matrix.features }}
        run: |
          if [ -n "${{ matrix.target }}" ]; then
            cargo check --locked --workspace --target ${{ matrix.target }} ${{ matrix.features }}
          else
            cargo check --locked --workspace ${{ matrix.features }}
          fi
        shell: bash

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
          
      - name: Check formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    strategy:
      matrix:
        include:
          # Native builds
          - os: ubuntu-latest
            target: ""
          - os: windows-latest
            target: ""
          - os: macos-latest
            target: ""
          # Android x86 cross-compilation
          - os: ubuntu-latest
            target: "x86_64-linux-android"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: ${{ matrix.target }}
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Run clippy
        run: |
          if [ -n "${{ matrix.target }}" ]; then
            cargo clippy --locked --workspace --target ${{ matrix.target }} --all-features -- -D warnings
          else
            cargo clippy --locked --workspace --all-targets --all-features -- -D warnings
          fi
        shell: bash

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        features:
          - ""
          - "--all-features"
          - "--no-default-features"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Run tests with features ${{ matrix.features }}
        run: cargo test --locked --workspace ${{ matrix.features }}
